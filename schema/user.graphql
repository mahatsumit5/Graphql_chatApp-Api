type User {
  id: ID!
  email: String!
  fName: String!
  lName: String!
  isActive: Boolean!
  profile: String
  bio: String
  coverPicture: String
}
# Session model
type Session {
  associate: User!
  userEmail: String!
  timeStamps: String!
  token: String!
}

type Query {
  "a list of all the users"
  loggedInUser: LogInResponse
  "a list of all the users"
  allUsers(params: allUser): AllUsersResponse
}

type Mutation {
  "Create a new user"
  signUp(input: SignUpUserParams): SignUpResponse
  "login to your account"
  signIn(input: SignInMutationVariables): SignInMutation
  logout: Response
  resetPassword(newPassword: String!): Response
  newJwt: Response
  updateUser: Response
  uploadProfile: Response
}

input SignUpUserParams {
  fName: String!
  lName: String!
  email: String!
  password: String!
}
input SignInMutationVariables {
  email: String!
  password: String!
}

input allUser {
  order: Order!
  take: Int!
  page: Int!
  search: String!
}

enum Order {
  asc
  desc
}
